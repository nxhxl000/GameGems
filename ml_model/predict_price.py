import joblib
import pandas as pd

# === –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ ===
model = joblib.load(r"C:\Blockchain\gamegems-app\ml_model\nft_price_regressor.pkl")

# === –ü—Ä–∏–º–µ—Ä NFT ===
itemType = "Boots"
rarity = "Common"
bonusValue = 1
real_price = 1250  # ‚Üê —ç—Ç–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏–ª–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥–µ–ª–∏ ===
df = pd.DataFrame([{
    "itemType": itemType,
    "rarity": rarity,
    "bonusValue": bonusValue
}])

# === –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã ===
predicted_price = model.predict(df)[0]

# === –†–∞—Å—á—ë—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è ===
deviation = round((real_price - predicted_price) / predicted_price * 100, 2)

# === –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ===
print("üîç –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ NFT:")
print(f"- –¢–∏–ø: {itemType}")
print(f"- –†–µ–¥–∫–æ—Å—Ç—å: {rarity}")
print(f"- –ë–æ–Ω—É—Å: {bonusValue}")
print(f"- –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–∞: {real_price}")
print(f"üí∞ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ –æ—Ç –º–æ–¥–µ–ª–∏: {round(predicted_price, 2)}")
print(f"üìä –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {deviation}%")

# === –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
if deviation < -10:
    print("üìâ –¶–µ–Ω–∞ –∑–∞–Ω–∏–∂–µ–Ω–∞")
elif deviation > 10:
    print("üìà –¶–µ–Ω–∞ –∑–∞–≤—ã—à–µ–Ω–∞")
else:
    print("‚úÖ –¶–µ–Ω–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ")
